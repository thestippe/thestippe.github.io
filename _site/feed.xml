<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-09T09:47:27+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Data Perspectives</title><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><entry><title type="html">Design tricks</title><link href="http://localhost:4000/design-introduction/" rel="alternate" type="text/html" title="Design tricks" /><published>2023-12-01T00:00:00+01:00</published><updated>2023-12-01T00:00:00+01:00</updated><id>http://localhost:4000/design-introduction</id><content type="html" xml:base="http://localhost:4000/design-introduction/"><![CDATA[<p>Some day I was watching a video by Tamara Munzner,
where she recommended to get some basic knowledge about design.
Before dealing with data visualization I though that design
was a useless subject, but I decided to follow her suggestion.
I first looked for some book, and then I decided to attend a design course.
By doing so, I found many very useful suggestions, and I realized
that design is not about making your visualization beautiful,
but it’s about making it clear.
Here I will share some of the information I found during these courses.</p>

<h2 id="grid">Grid</h2>

<p>Align, align everything! The more things are aligned, the easier will be
for your audience to find the informations.
Generally left alignment is better, but there are situations where
you may prefer to use other alignments.
A classical example is given by tables with one key and one value:
in this case you may want to right-align your left column
and left-align your right column.
By doing so, it will be easier for your reader to match each key with its own value.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: right">key</th>
      <th style="text-align: left">value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">apples</td>
      <td style="text-align: left">14</td>
    </tr>
    <tr>
      <td style="text-align: right">oranges</td>
      <td style="text-align: left">8</td>
    </tr>
    <tr>
      <td style="text-align: right">bananas</td>
      <td style="text-align: left">21</td>
    </tr>
  </tbody>
</table>

<p>In the above table I used another trick to make the table easier to read, I alternated the background color of the rows.</p>

<p>A common error is to center everything, this may strongly affect the readability of your visualization.</p>

<h2 id="white-space">White space</h2>

<p>Don’t feel obliged to fill every squared centimeter of your visualization: leaving some white space may enhance its readability.
In other world, use the space you have at your disposal.
Moreover, white space in visual design has the same effect as pausing has when talking:</p>

<p><br />
<br />
<br />
<br />
it adds emphasis!</p>

<h2 id="consistency">Consistency</h2>

<p>Strive for consistency, make things look similar, and if you don’t want to, make them look <strong>very</strong> different, and this is of course 
applies to any context.
Consistency will help your reader to understand you. If you once use an acronym, then you should always use it.</p>

<p>When you build a dashboard, make sure that your interacting items are build consistently.</p>

<p>Do not implement a light blue button and a dark blue one: you should either give them the same color if they have a similar function,
or you should give them a very different color, like blue and red.</p>

<p>Moreover, you should be consistent with the used conventions. Red in finance means loss, and if you’re preparing a visualization
for a finance startup, then you should be consistent with this convention and reserve the red color for loss.</p>

<h2 id="typography">Typography</h2>

<p>Typography is by itself the topic of many books, blogs and other website, so I won’t even try and be exhaustive here.
Just keep in mind that the choice of your font is very important for many factors:</p>

<ul>
  <li>Font can affect the readability of your visualization</li>
  <li>A bad font choice can convey the wrong message</li>
  <li>You should always be consistent with the generally accepted typographic conventions</li>
</ul>

<p>I will probably discuss typography more in detail in a future post, but for now keep in mind that this is a very important subject, unless your
visualization has no text (and in this case it would be hard to understand it).</p>

<ul>
  <li>DON’T USE TOO MUCH UPPERCASE</li>
  <li>When you use commas , dots or other punctuation , space goes after , not before !</li>
  <li>When you quote, someone, like ‘‘There’s no place like home.’’, you should use “double quotation marks”</li>
  <li><strong><em>Too much emphasis is no emphasis.</em></strong> Avoid too much bold or italic, and avoid using them simultaneously</li>
  <li>em dash —like this— can be used instead of parenthesis, en dash can be used for dates, like 2023–12. Hyphens are used to join words or parts of words, like check-in</li>
  <li>If you write lists:
    <ul>
      <li>Either capitalize the first letter and use a dot.</li>
      <li>or don’t capitalize the first letter and use semicolon;</li>
      <li>Or don’t use punctuation</li>
      <li>Don’t capitalize with semicolon;</li>
    </ul>
  </li>
</ul>

<p>When you start a new paragraph, either enlarge space between rows, or add a space at the beginning of the new line.</p>

<p>  Don’t do both.</p>

<h2 id="color">Color</h2>

<p>We already discussed color from the perceptual point of view, but color is very important from the design perspective too.
Colors have cultural meaning, and being consistent with them is very important.
If you are developing a visualization about smog, you should keep in mind the fact that green can be often interpreted as natural or healthy,
so using green to depict a highly polluted area may not be a good idea.</p>

<p>You should also look for color combinations that look appealing, as they will let your reader look at your visualization with pleasure.</p>

<h2 id="hierarchy">Hierarchy</h2>

<p>Keep in mind the hierarchy of your visualization, emphasize what is relevant and put less important objects in the background.
Find the focal point of your composition and try and determine the visual query that the reader will follow. Is this the one you look for?</p>

<h2 id="conclusions">Conclusions</h2>

<p>We have seen how to leverage design to make your message clearer. We briefly discussed few design principles which will help your reader to understand you.
Later in this blog we will take a deeper look to some of the design principles.</p>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/design_introduction/" /><summary type="html"><![CDATA[Few ideas from design]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/design.jpg" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/design.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How to choose a color map</title><link href="http://localhost:4000/palettes-introduction/" rel="alternate" type="text/html" title="How to choose a color map" /><published>2023-11-25T00:00:00+01:00</published><updated>2023-11-25T00:00:00+01:00</updated><id>http://localhost:4000/palettes-introduction</id><content type="html" xml:base="http://localhost:4000/palettes-introduction/"><![CDATA[<p>In the <a href="/color-introduction/">last post</a> we defined the LCh color space and 
explained why this is, at the moment, the best color space you can use to construct
a color map.
In this post we will explain how to build a color map with it.</p>

<script src="https://d3js.org/d3.v5.js"></script>

<h2 id="categorical-color-maps">Categorical color maps</h2>

<p>The easiest way to construct a categorical color map is to keep
the chroma and the luminance constant, and to vary the hue.</p>

<p>Varying the hue has the advantage that your audience will be able to
refer to a particular category by simply using the color name.
This is of course true unless you have too many colours, in this case naming the color
could be ambiguous.
Moreover, by keeping the luminance constant, there will be no category
which stands out more than the other categories, so your classes
will be all be perceived in the same way.</p>

<p>Naively, you may be tempted to choose the highest luminance
as well as the highest chroma 
as possible in order to accommodate the highest number of classes as possible.
From a perceptual point of view, however, this is not a good idea:
your audience will be likely distracted by the bright colors, so using
less brilliant colors will reduce the cognitive load of your audience.
In order to do this, you can either decrease the chroma or the luminance
of your color, or both.</p>

<p>Keeping a high chroma and a high luminance has another issue, related to the structure of the LCh color space:
given a chroma and a luminance, not all the hues are displayable,
and the more you increase the chroma, the more the available hue range becomes smaller.</p>

<p>Keeping the luminance constant can moreover be problematic for people affected by a quite common inability,
namely color blindness. Some people have a reduced or either completely absent
capacity to perceive color hue, so keeping the luminance constant will
imply that this part of your audience will experience problems into a correct 
interpretation of your visualization.</p>

<p>There are also design issues to take into account:
spanning the entire hue circle will likely make your visualization look
like an harlequin, and this will also contribute distracting your audience.
A possible strategy to avoid this could be to restrict your hue variation
within warm colors or cold colors.
Additionally, you may need to consider that color may convey an implicit message,
and this message may depend on the cultural background of your audience.
This may be a positive fact or a negative one for you: red and blue meanings are universally
recognized when talking about temperature, so you may consider using
red to refer to a high volatility (which is often referred to high temperature
in statistics) period in a market analysis and use blue to depict low volatility periods.
On the other hand, in finance, red is associated with loss, so by using the above
convention you may implicitly transmit the idea that high volatility
implies loss, which is simply false (you may have a period where an
index is always negative, and this is low volatility loss).</p>

<p>There may be finally some task-specific issue to take into account.
Companies often require that their visualizations fulfill specific
requirements, like using the company’s palette.</p>

<div class="emphbox">
When you choose a color map, you must consider many factors, and finding 
a good balance can be a tricky task.
</div>

<p>In order to reduce some of these issue, one should keep in mind that color
is an appropriate channel for categorical attributes for a limited number
of classes, possibly no more than four and never more than, say, eight <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<script src="https://d3js.org/d3.v5.js"></script>

<p><br /></p>
<div id="categorical_example"> </div>
<p><br /></p>

<script src="/docs/assets/javascript/palettes_introduction/catExample.js">
</script>

<h2 id="quantitative-color-maps">Quantitative color maps</h2>

<p>The simplest possible way to construct a quantitative color map is to keep the hue and the chroma as constant, and to let the value vary within the largest possible range.
Many color scales have been built in this way, but this is not the only possible way to proceed.
A very popular and valid alternative is to vary hue too.
This has the main advantage that one may span a larger region of the color space, and this would increase the smaller possible perceived variation
of your attribute.</p>

<p><br /></p>
<div id="quantitative_example"> </div>
<p><br /></p>

<script src="/docs/assets/javascript/palettes_introduction/quantExample.js">
</script>

<h2 id="diverging-color-maps">Diverging color maps</h2>
<p>Building a diverging color map will now be very easy, as
it simply requires to attach two color maps.
Those color maps should:</p>

<ul>
  <li>Have the same chroma</li>
  <li>Start from a common point</li>
  <li>Move in different hue directions</li>
  <li>Span the same distance in the luminance direction</li>
</ul>

<p><br /></p>
<div id="diverging_example"> </div>
<p><br /></p>

<script src="/docs/assets/javascript/palettes_introduction/divExample.js">
</script>

<h2 id="cyclic-color-maps">Cyclic color maps</h2>

<p>Sometimes you may also want to encode the fact that your attribute is cyclic, as an example when you are
dealing with months, seasons or other periodic quantities.
In this case you can simply put a difference between the minimum and maximum hue equal to 360.</p>

<p>In case you are dealing with categorical attributes, keep in mind than you should
increase by one the number of categories and drop the last one in order to 
have distinct colors for distinct categories.</p>

<p><br /></p>
<div id="cyclic_example"> </div>
<p><br /></p>

<script src="/docs/assets/javascript/palettes_introduction/cclExample.js">
</script>

<h2 id="conclusions">Conclusions</h2>

<p>Choosing the correct color map may be a complicated issue.
We have seen which are the main choices one must address in this task,
together with some recipes to proceed.
Sometimes the easiest choice is to simply go for a pre-build color map,
as most dataviz libraries comes with their palettes, and they are
usually done very well.
This is the case of <a href="https://matplotlib.org/stable/users/explain/colors/colormaps.html">matplotlib</a> for Python or <a href="http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/">ggplot2</a> for R, as well as
for other tools like <a href="https://help.tableau.com/current/pro/desktop/it-it/formatting_create_custom_colors.htm">Tableau</a> and of course <a href="https://observablehq.com/@d3/color-schemes">d3js</a> (which has been used almost everywhere in this blog, included this post).</p>

<p>Another great resource is to take a palette from <a href="https://colorbrewer2.org/#type=sequential&amp;scheme=BuGn&amp;n=3">colorbrewer</a>, which is a collection of hand made color maps.</p>

<p>Sometimes, however, this is not possible, since you
may have requirements which are not implemented into the most popular
palettes.</p>

<p>In any case, you should keep in mind the following truth about color:</p>

<div class="emphbox">
<q>Above all, do not harm</q> - Edward Tufte
</div>

<h2 id="practice-it">Practice it</h2>

<p>Now that we highlighted some of the choices you should consider when building a
color map, let us use the above mentioned strategy to construct a color map.
This is a very simple app that allows you to implement the above methods
to construct a color map.
You can choose the chroma and select a segment in the Hue-Luminance plane.
One you are satisfied, you can generate your palette.
Notice that, by varying the parameters, you may get out from the displayable
region, so in order to avoid perceptual distortion the app will return black
for the points which are not displayable.</p>

<p><br /></p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">

<div>

<br />
Categories: <input type="text" id="CategoricalNumClasses" />
<ul>
<li>
<input type="range" id="CategoricalChroma" min="0" max="120" onchange="updateChroma(this.value)" /> Chroma: <span id="chromaInput">45</span> 
</li>
<li> <input type="range" id="CategoricalminHue" min="-360" max="360" onchange="updateMinHue(this.value)" /> Hue 1: <span id="minHueInput">-70</span> 
</li>
<li><input type="range" id="CategoricalmaxHue" min="-360" max="360" onchange="updateMaxHue(this.value)" /> Hue 2: <span id="maxHueInput">100</span>
</li>
<li><input type="range" id="CategoricalValueMin" min="0" max="100" onchange="updateMinValue(this.value)" /> Luminance 1: <span id="minValueInput">15</span>
</li>
<li><input type="range" id="CategoricalValueMax" min="0" max="100" onchange="updateMaxValue(this.value)" /> Luminance 2: <span id="maxValueInput">95</span>
</li>
</ul>
</div>
<div>
<br />

 <button onclick="drawPalette()">Update palette</button> 
<button onclick="createFile()">Download data</button>
</div>

<br />

 <div id="catPalette"></div>
 </div>
<div class="column" style="flex:50%;">
 <div id="catSurface"></div>
 </div>
 </div>

<p><br />
<br /></p>
<div>
Here you may also import your palette to visualize it.
</div>
<div>
 <input type="text" id="inputPalette" />
 <button onclick="drawExternalPalette()">Import color map</button> 

<br />
<br />

<br />
 <div id="externalPalette">
 </div>

<br />
<br />


<script src="/docs/assets/javascript/palettes_introduction/categorical_cmap.js">
</script>
</div>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>There is no agreement on the exact number of maximum categories one can easily distinguish by using color. A recent article, however, suggested that we use two different areas of the brain to count up to four and to count more objects, so without other experimental evidences I would suggest four as possible maximum value. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/color-map/" /><summary type="html"><![CDATA[Each task has its own palette]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/palettes_introduction/palettes.png" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/palettes_introduction/palettes.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introduction to color perception</title><link href="http://localhost:4000/color-introduction/" rel="alternate" type="text/html" title="Introduction to color perception" /><published>2023-11-24T00:00:00+01:00</published><updated>2023-11-24T00:00:00+01:00</updated><id>http://localhost:4000/color-introduction</id><content type="html" xml:base="http://localhost:4000/color-introduction/"><![CDATA[<p>Color is often used and misused in data visualization, as its stand out properties makes it 
a very attractive channel for any kind of visualization.
However, properly using color to encode any kind of attribute is far from being an easy
task.
Here we will start to analyze this problem by building a color space with the proper features.</p>

<h2 id="the-rgb-color-space">The RGB color space</h2>
<script src="https://d3js.org/d3.v7.js"></script>

<p>As we have seen, we perceive color thanks to cones, which are divided
into three types. Each type is more sensitive to a specific wavelength,
corresponding to red, green and blue respectively.
This implies that, from a perceptual point of view,
color is a three dimensional space, as any color we see
can be defined by providing the amount of contribution of each of the three
channels.
These three channels are the same channels that are used by computers to specify
a colors: in the RGB space a color is defined by providing three numbers.
Since computers work in binary base rather than in base 10 base, the three numbers can span from $0$ to $255=2^8-1\,,$
and $0$ corresponds to no color in that channel, while $255$ means that 
that channel fully contributes to that color.
In the following you can visualize the mapping between the RGB input and the color output.</p>

<p><br />
<br /></p>
<div class="row" style="display:flex">
<div class="column" style="flex:20%;">
<div class="redContainer">
  <input type="range" min="0" max="255" value="0" class="slider" id="redRange" />
  <p>R: <span id="redValue"></span></p>
</div>

<div class="greenContainer">
  <input type="range" min="0" max="255" value="0" class="slider" id="greenRange" />
  <p>G: <span id="greenValue"></span></p>
</div>

<div class="blueContainer">
  <input type="range" min="0" max="255" value="0" class="slider" id="blueRange" />
  <p>B: <span id="blueValue"></span></p>
</div>
</div>

<div class="column" style="flex:80%;">
<div class="svgContainer">
<svg height="120" width="100" id="rgbsvg">
<circle cx="50" cy="70" r="50" fill="rgb(0,0,0)" id="rgbCircle" stroke="black" />
</svg>
</div>
</div>
</div>

<p><br />
<br /></p>

<h2 id="xyz-and-lab-color-spaces">XYZ and Lab color spaces</h2>

<p>Even if both the systems work by using red, green and blue as fundamental colors, the RGB color system does not
exactly correspond to how our eyes perceive the color, since the cones has a broad wavelength bandwidth.
In order to account for this, the International Commission on Illuminance (CIE, from the french acronym),
proposed in 1936 the XYZ color space, where the basis vectors X, Y and Z are given by a linear combination
of the R,G and B component.</p>

<p>While our eyes capture the R,G and B channels, this is not how the signal is elaborated by our brain.
According to the color opponency theory, defined in the literature as one of the most important models in color perception, we combine the perceived colors into three channels:</p>

<ul>
  <li>Black-White</li>
  <li>Blue-Yellow</li>
  <li>Magenta-Green</li>
</ul>

<p>This theory was born from the intuition that
we cannot perceive opponent colors simultaneously:
there is no reddish green neither bluish yellow.
For this reason, the CIE proposed the Lab color system, where the three coordinates are
the luminance \(L^*\) (black-white channel) together with two chroma \(a^*\), which goes spans from magenta to green,
and \(b^*\), which runs in the blue-yellow direction.
The mapping between the XYZ color space to the Lab color space is non-linear in order for the Lab space
to be <strong>perceptually uniform</strong>, which means that a variation in this space
can be linearly mapped into a perceived color variation.
Another space with the same features is the Luv color space, but from the methodological point of view its 
construction is identical to the Lab color space.</p>

<h2 id="hcl-color-space">HCL color space</h2>

<p>This color system is, however, nor very intuitive, as it is hard to specify a color by means of its \(a^*\) and \(b^*\)
components.
This problem can, however, easily solved by switching to circular coordinates into the \(a-b\) plane.
This color space, named LCh, has three coordinates:</p>

<ul>
  <li>Hue (the angular coordinate)</li>
  <li>Chroma (the radial coordinate)</li>
  <li>Lightness</li>
</ul>

<p>In the following we try and show the LCh color space.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:40%;">
<div id="colCircle">
</div>
</div>

<div class="column" style="flex:40%;">
<div class="luminanceContainer" style="margin-top:230px">
  <input type="range" min="0" max="100" value="50" class="slider" id="luminanceRange" />
  <p>L: <span id="luminanceValue"></span></p>
  <p> <span> Click on a color to get the corresponding RGB value.</span></p>
  <p><span id="correspondingColor">RGB: </span></p>
</div>
</div>
</div>

<script src="/docs/assets/javascript/color_introduction/colorCircle.js">
</script>

<p>Notice that the LCh color space can be both be constructed by starting from the Lab space and from the Luv space,
so a subscript in order to specify if the LCh color space has been build on the Lab color space or on the Luv color space.</p>

<div class="emphbox">
The LCh color space is both perceptually uniform and easy to use.
</div>

<p>There have been other attempts to map the RGB color space into more friendly color spaces, and the most
popular are HSL and HSV, but they are not perceptually uniform, so they are not well suited for data visualization.</p>

<h2 id="conclusions">Conclusions</h2>

<p>We saw how to switch from the RGB color space to
the HCL color space, going through the XYZ
and the Lab/Luv color spaces.
The HCL color space is perceptually
uniform, so variations into the color
space are linearly mapped to perceptual variations.
This feature makes this color space a fundamental
building block in data visualization, as it allows
us to use color to map quantitative attributes
in a non-deceptive way.
In a future post we will see how to use this
space to build color palettes.</p>

<script src="/docs/assets/javascript/color_introduction/rgbshow.js">

</script>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/color-introduction/" /><summary type="html"><![CDATA[Some basic concepts about color spaces]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/color_perception/color_circle.png" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/color_perception/color_circle.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Drawing is redrawing</title><link href="http://localhost:4000/gender-economist/" rel="alternate" type="text/html" title="Drawing is redrawing" /><published>2023-11-20T00:00:00+01:00</published><updated>2023-11-20T00:00:00+01:00</updated><id>http://localhost:4000/gender-economist</id><content type="html" xml:base="http://localhost:4000/gender-economist/"><![CDATA[<p>Sometimes you must deal with constraints in dataviz, and finding the most
suitable way to tackle your problem is not always easy.
This is the case of the challenge launched by Sarah Leo, a visual data journalist
working at the Economist in <a href="https://medium.economist.com/mistakes-weve-drawn-a-few-8cdd8a42d368">this post</a>.</p>

<p>Among designers there is a well know saying which states “Designing is redesigning”, and this also holds 
when you are designing a data visualization.
In the above post, Sarah critically analyzes some issues of the past visualizations of her journal,
and she explain how she would have corrected them.
When talking about dataviz, the Economist is one of my favourites journals, as their graphics are usually very clean and polished.
However, I agree with Sarah, those shown in her post are not their best works.</p>

<p>In the last example, taken from
a 2017 article titled <a href="https://www.economist.com/science-and-technology/2017/03/11/science-remains-male-dominated">“Science remains male dominated”</a>
she analyzes the following image
<img src="/docs/assets/images/gender_economist/original.webp" alt="gender economist" />
and, as you may notice from the right hand side of the figure, she decided not to redesign the chart, as the space constraints are too stringent.</p>

<h2 id="my-first-attempt">My first attempt</h2>

<p>I decided to try and redo it by myself, so first of all I analyzed the information we wanted to plot.</p>
<ul>
  <li>The first attribute is the Country, which is a categorical attribute.</li>
  <li>We then have the research field, which is another categorical attribute.</li>
  <li>We finally have the percentage of women, which is a quantitative attribute.</li>
</ul>

<p>As a “special” information we also have the percentage of inventors, which is somehow different from a research field,
and of course Sarah shows this different by using a different marker for this attribute.</p>

<p>Probably the best possible approach would be to draw a bar chart where, for each research field,
we show the percentage of women, but this would take quite a large amount of space, so I immediately discarded this idea.</p>

<p>The structure of the data itself should suggest another possible approach: why don’t we draw a matrix?
This would save some space, and by using area as
channel to encode the women percentage we could easily encode all the informations.
Here’s the result.</p>

<link rel="stylesheet" href="/docs/assets/css/gender.css" />

<script src="https://d3js.org/d3.v5.js"></script>

<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

<div id="gender_area"></div>
<script src="/docs/assets/javascript/gender_economist/gender_area.js"></script>

<p>The visualization is quite clear, and less cluttered than the original one.
I don’t know which were exactly the requirements of the editor,
but comparing the size of the above image with the original one, maybe it would have
been OK.
Note that we also remarked the difference between the inventor percentage
and the research fields by using a different font weight
together with a different background color, as those
are common tricks in graphics and typography.</p>

<p>But there is some issue: how would you estimate the percentage of women
in Australia in the healthcare sector?</p>

<p>Honestly I would say about 70%, maybe even 80%.
Well, <em>it’s exactly 50%!</em>
I immediately asked myself if there was a bug in the code, so I printed
the size for 100% women and the one for 50%.
I got 60 (as expected) and 42.63, their reciprocal ratio is 0.707
which is roughly the square root of 0.5, so there’s no bug!</p>

<div class="emphbox">
The issue is that, on average, humans are very bad at estimating
areas, and we tend to use the size of the square side rather than
the square area to decode the information.
</div>

<p>This is a well known issue, and we will discuss this in a future post.
So how can we solve this issue?</p>

<h2 id="using-color-instead-of-area">Using color instead of area</h2>

<p>As we have seen when talking about
channel effectiveness, color is even worst than area to encode
quantitative information, but let us try and do that anyway.</p>

<div id="gender_color_first"></div>
<script src="/docs/assets/javascript/gender_economist/gender_color_first.js"></script>

<p>In redrawing the figure, I removed the gray background.
I did so because, as we will see in a future post,
our perception of color difference is quite strongly affected by the color background, so I considered
the information provided by the color background
not relevant enough to risk a distortion in the perception
of the color difference among the last column and the remaining columns.</p>

<p>Actually I find slightly easier to decode the information, but still
it’s hard to say if we are above or below 50%.</p>

<h2 id="finding-the-appropriate-palette-class">Finding the appropriate palette class</h2>

<p>In order to solve this issue we must rethink our visualization, and we must do that
by keeping in mind what is the true quantity that we want to decode,
which is the gender imbalance.</p>

<p>We don’t need a channel that exactly tells us the percentage of women,
but rather we want to know how far are we from 50% and in which direction.</p>

<p>There’s a class of color palettes which is suitable for our purposes,
and it’s the family of the diverging color palettes.
Let’s take a look and see how would a diverging color palette
work for our purpose.</p>

<div id="gender_color"></div>
<script src="/docs/assets/javascript/gender_economist/gender_color.js"></script>

<p>Here it’s much easier to decode the relevant quantity, and we used exactly the same
space we used in the first visualization we made.
Now we can immediately spot that all but the firs columns are above 50%, that Japan is likely the worst
country, that Brazil and Portugal are the best ones and that the research area where it’s morel likely
to encounter women is health science.
Moreover, in health science the percentage of men and women is more or less 50-50 in most countries, where the balance is
just slightly in favour of men <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.
We can also see that physics, engineering and math have roughly the same distribution, and that the percentage of
women inventors is almost always lower than the percentage of women researcher in any field.
This is quite a large amount of information in my opinion, so I feel quite satisfied by this solution.</p>

<div class="emphbox">
Use diverging color palettes to encode how far are your data from a certain point.
</div>

<h2 id="conclusions">Conclusions</h2>

<p>This post was about a real application, and in these situations there are many things to consider, so we touched many aspects of data visualization.
The main things I’d like to stress you about are the following:</p>

<ul>
  <li>Always make sure that there are no bugs in your visualization.</li>
  <li>Always keep in mind what you want to show, and state this information as clearly as possible.</li>
  <li>Always try different designs for your visualizations, choose the ones which look more promising and refine them, then reiterate.</li>
  <li>Data visualization is about choosing among options, and each option will have pros and cons. This is the reason why I never trust who gives me recipes, they rarely work in real life.</li>
</ul>

<p>Moreover, as secondary more practical things to keep in mind:</p>
<ul>
  <li>We are bad at estimating areas as well as at estimating color variations, so always consider using distance or length as channel to encode relevant informations, as suggested by the effectiveness principle.</li>
  <li>Use diverging color palettes to encode distances from a given relevant point.</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>I preferred this color scheme with respect to the more common red-blue one because I found easier to infer if a value close to 0.5 was slightly above or below 0.5. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/redesign/" /><summary type="html"><![CDATA[How to tackle real life dataviz problems]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/gender_economist/original.webp" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/gender_economist/original.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Visual queries</title><link href="http://localhost:4000/visual-queries/" rel="alternate" type="text/html" title="Visual queries" /><published>2023-11-10T00:00:00+01:00</published><updated>2023-11-10T00:00:00+01:00</updated><id>http://localhost:4000/visual-queries</id><content type="html" xml:base="http://localhost:4000/visual-queries/"><![CDATA[<p>As we have seen, our eyes can only perceive a very small area with a high resolution. 
The saccadic movements, however, let us inspect different portions
of space. Our brain then reconstructs the information, 
making us confident that we clearly see a larger amount of space.</p>

<p>The sequence of inspected areas is called visual queries, and in this post
we will have a deeper discussion on them.</p>

<h2 id="a-simplified-information-flow-model">A simplified information flow model</h2>

<p>As explained in Colin Ware’s textbook, the neural activity involved in our sight process is very involved, but
for our purposes we can build a simplified model, which will help us in designing visualizations.
In this model we have two information flows, a bottom-up flow and a top-down one.
In the bottom-up flow the information provided by our eyes is collected, filtered and elaborated.
The elaboration goes through many steps. In the first step, the retinal signal is converted into features like color, size and shape.
At each subsequent step we construct pattern of increasing complexity.
Some of the most relevant patterns emerging in this phase will be discussed in the post about <a href="/gestalt/">Gestalt psychology</a>.
These patterns are then stored into our <strong>visual working memory</strong>.</p>

<p>The visual working memory is considered the main bottleneck of our attention, as it can only store few objects at each time
and only for a very small amount of time, typically few seconds or less.
An experimental evidence of this fact can be found in the so-called “Door study”, by Simons and Levin, which can be seen <a href="https://www.youtube.com/watch?v=FWSxSQsspiQ">here</a>.
The study shows that, when we talk to a stranger, we are not even able to recognize his/her own face, and if our speaker is exchanged we often don’t even notice it (unless
of course the original speaker and the new one are too dissimilar).
For this reason, it is generally recommended not to use interaction whenever possible, as interacting takes time, and during
this time some important information may get lost, so we may miss some important pattern <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<p>In the top-down flow we direct our attention, so our eyes, depending on our available information and expectations, as well as depending on our task.
At the lower level, our attention makes us focus on the elementary signals we are looking for: if we are looking for our car, and our car is red,
our attention will let us focus on red objects.</p>

<p><br />
<img src="/docs/assets/images/visual_queries/attention.svg" width="700" alt="Our model for vision." />
<br /></p>

<p>I would like to stress you with the fact that signals considered as interesting are stronger have a very important consequence:</p>

<div class="emphbox">
Our perception is strongly biased by what we expect.
</div>

<h2 id="other-aspects-in-visual-perception">Other aspects in visual perception</h2>

<p>There is also another important aspect that enters into the game, which is our culture, and this fact is well known by user experience designers.
As an example, our visual queries are generally influenced by our writing system: in most western cultures we write from left to right
and from top to bottom, and this makes us start looking for new information at the top left of a web page, so UI designers usually put
there the most important informations.
On the other hand, in other Countries like the ones in the Middle East, the writing goes from right to left.
Due to this, companies like Google or Microsoft usually reverse the user interface on the left-right plane for languages like arabic, and they put
the most relevant information on the right.</p>

<p>Also experience plays a major role in what we perceive: if you are new to a specific task, this will require you more
attention, so it will be more likely for you to ignore other information source.</p>

<h2 id="what-to-do-what-to-avoid">What to do, what to avoid</h2>

<p>Since the exact structure of the query is subjective and depends on the task, there is no recipe to determine how one will perform
visual queries.
There are however few questions that you can ask yourself when making a visualization:</p>

<ul>
  <li>What task should the visualization accomplish?</li>
  <li>Who will be the audience?</li>
  <li>What could be a reasonable way to perform this task from a cognitive point of view?</li>
  <li>Is there any visualization which could make this task easier, from a cognitive point of view?</li>
</ul>

<p>Moreover, you should avoid adding distracting elements to your visualizations.</p>

<ul>
  <li>Any decoration may distract your user, so keep your visualizations as clean as possible.</li>
  <li>Avoid fancy fonts, they are designed to be visually attractive.</li>
  <li>Avoid useless images, especially the ones depicting human shapes, as they strongly attract our attention.</li>
  <li>Make less relevant information less visible, use soft colors for them or shades of gray, reduce the width of less important lines like axis, ticks or grids.</li>
</ul>

<h2 id="conclusions">Conclusions</h2>
<p>We discussed some model of visual perception, and we have seen that our capacity to store information is the main
bottleneck in what we see. What we see is determined by many factors, and the most relevant is attention.
We finally gave some suggestion to improve our data visualizations by carefully driving the reader’s attention.</p>

<h2 id="suggested-readings">Suggested readings</h2>

<ul>
  <li><cite><a href="https://link.springer.com/content/pdf/10.3758/BF03208840.pdf">Simons, Daniel &amp; Levin, Daniel. (1998). Failure to detect change to people during a real-world interaction. Psychonomic Bulletin &amp; Review. 5. 644-649. 10.3758/BF03208840. </a></cite></li>
  <li><cite> Colin Ware, Information Visualization, Perception for Design. </cite></li>
  <li><cite> Munzner, T. (2015). Visualization Analysis and Design. CRC Press. ISBN: 9781498759717 </cite></li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>As a fun fact, this memory bottleneck is used in many magic tricks, as the one <a href="https://www.crazycardtrick.com/">here</a>. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/gestalt/" /><summary type="html"><![CDATA[How do we inspect an image]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/visual_queries/attention.svg" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/visual_queries/attention.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Gestalt principles</title><link href="http://localhost:4000/gestalt/" rel="alternate" type="text/html" title="The Gestalt principles" /><published>2023-11-07T00:00:00+01:00</published><updated>2023-11-07T00:00:00+01:00</updated><id>http://localhost:4000/gestalt</id><content type="html" xml:base="http://localhost:4000/gestalt/"><![CDATA[<p>Gestalt principles and laws are widely used in design in order to convey
grouping among items in a visualization.
Here we will discuss them in order to understand how to leverage them in dataviz.</p>

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v5.js"></script>

<p>I found many versions of the Gestalt principles online, and I collected
and reorganized all of them as best as I could.</p>

<h2 id="proximity">Proximity</h2>

<div class="emphbox">
Nearby objects are perceived as a group.
</div>

<script src="/docs/assets/javascript/gestalt/proximity.js">
</script>

<div id="proximity">
</div>

<p>By looking at the above figure,
in the first case you will probably see
a grid,
in the second one a collection
of columns and in the third one a 
collection of rows.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
When labelling objects in a figure, you can leverage this principle
and use proximity to let the reader easily understand to which object is 
associated each label.
</div>

<div class="column" id="proximityLabel" style="flex:50%"></div>
</div>
<p><br /></p>

<script src="/docs/assets/javascript/gestalt/proximityLabel.js"></script>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />

This principle is also the one which let us identify clusters in a scatter plot,
as we are naturally led to perceive close points as belonging to a common set.

</div>

<div class="column" style="flex:50%;">
<svg height="300" width="300">
<circle cx="100" cy="105" r="10" style="fill:grey" />
<circle cx="100" cy="140" r="10" style="fill:grey" />
<circle cx="120" cy="100" r="10" style="fill:grey" />
<circle cx="90" cy="85" r="10" style="fill:grey" />

<circle cx="205" cy="205" r="10" style="fill:grey" />
<circle cx="200" cy="245" r="10" style="fill:grey" />
<circle cx="220" cy="190" r="10" style="fill:grey" />

</svg>

</div>
</div>
<p><br /></p>

<h2 id="similarity">Similarity</h2>

<div class="emphbox">
Similar objects are perceived as a group.
</div>

<script src="/docs/assets/javascript/gestalt/similarity.js">
</script>

<div id="similarity">
</div>

<p>In this case, even if our objects are equally spaced, we naturally perceive
two groups of objects, and each group has a different color.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
The similarity principle can be used to make objects belonging to the same category
appear connected by encoding the category into a non-spatial channel (e.g. color, shape).
</div>

<div class="column" style="flex:50%;">
<svg height="300" width="300">
<circle cx="200" cy="105" r="10" style="fill:steelblue" />
<circle cx="200" cy="140" r="10" style="fill:crimson" />
<circle cx="220" cy="100" r="10" style="fill:crimson" />
<circle cx="290" cy="85" r="10" style="fill:steelblue" />
<circle cx="235" cy="205" r="10" style="fill:crimson" />
<circle cx="230" cy="245" r="10" style="fill:steelblue" />
<circle cx="225" cy="190" r="10" style="fill:steelblue" />

</svg>

</div>
</div>
<p><br /></p>

<h2 id="connection">Connection</h2>

<div class="emphbox">
Objects which look connected are perceived as a group.
</div>

<svg height="400" width="400">
<rect x="100" y="100" width="100" height="100" style="fill:steelblue" /> 
<rect x="100" y="300" width="100" height="100" style="fill:steelblue" /> 
<rect x="300" y="100" width="100" height="100" style="fill:steelblue" /> 
<rect x="300" y="300" width="100" height="100" style="fill:steelblue" /> 

<line x1="200" y1="150" x2="300" y2="150" stroke="gray" style="stroke-width:3;" />
<line x1="200" y1="350" x2="300" y2="350" stroke="gray" style="stroke-width:3;" />
</svg>
<p><br /></p>

<p>In the above figure, according to the Gestalt principles, you should
perceive the two squares in the first line as connected, as well
as the two squares in the second line.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />

This principle is used in many charts, like the parallel coordinates plot
as well as the line chart, to enforce the idea that to each line is associated one single object.

</div>
<div class="column" style="flex:50%;">

<svg height="350" width="500">
<path d="M 100 100 L 200 120 L 300 80 L 400 70" stroke="steelblue" style="fill:none; stroke-width:3;" />
<path d="M 100 120 L 200 110 L 300 90 L 400 60" stroke="steelblue" style="fill:none; stroke-width:3;" />
<path d="M 100 80 L 200 70 L 300 60 L 400 90" stroke="steelblue" style="fill:none; stroke-width:3;" />

<path d="M 100 280 L 400 280" stroke="gray" style="fill:none; stroke-width:3;" />
<path d="M 100 0 L 100 280" stroke="gray" style="fill:none; stroke-width:1;" />
<path d="M 200 0 L 200 280" stroke="gray" style="fill:none; stroke-width:1;" />
<path d="M 300 0 L 300 280" stroke="gray" style="fill:none; stroke-width:1;" />
<path d="M 400 0 L 400 280" stroke="gray" style="fill:none; stroke-width:1;" />

<text x="100" y="300" fill="gray"> A </text>
<text x="200" y="300" fill="gray"> B </text>
<text x="300" y="300" fill="gray"> C </text>
<text x="400" y="300" fill="gray"> D </text>

<text x="220" y="320" fill="gray"> Attribute </text>
</svg>

</div>
</div>
<p><br /></p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
Also when drawing networks, we exploit this principle in order to convey the message
that the network is composed by all the linked objects.

</div>
<div class="column" style="flex:50%;">
<svg height="300" width="500">
<path d="M 100 100 L 120 80 L 200 160" stroke="grey" style="fill:none; stroke-width:3;" />
<path d="M 120 80 L 110 40" stroke="grey" style="fill:none; stroke-width:3;" />

<circle cx="100" cy="100" r="10" style="fill:steelblue" />
<circle cx="120" cy="80" r="10" style="fill:steelblue" />
<circle cx="200" cy="160" r="10" style="fill:steelblue" />
<circle cx="110" cy="40" r="10" style="fill:steelblue" />
</svg>

</div>
</div>
<p><br /></p>

<h2 id="enclosure">Enclosure</h2>

<div class="emphbox">
Objects which are enclosed within a perimeter are perceived as a group.
</div>

<svg height="500" width="500">
<rect x="100" y="100" width="100" height="100" style="fill:steelblue" /> 
<rect x="100" y="300" width="100" height="100" style="fill:steelblue" /> 
<rect x="300" y="100" width="100" height="100" style="fill:steelblue" /> 
<rect x="300" y="300" width="100" height="100" style="fill:steelblue" /> 

<line x1="50" y1="50" x2="450" y2="50" stroke="gray" style="stroke-width:3;" />
<line x1="450" y1="50" x2="450" y2="250" stroke="gray" style="stroke-width:3;" />
<line x1="450" y1="250" x2="50" y2="250" stroke="gray" style="stroke-width:3;" />
<line x1="50" y1="250" x2="50" y2="50" stroke="gray" style="stroke-width:3;" />
</svg>

<p>In this example, the objects enclosed within the gray lines are perceived
as grouped together.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
We can use this principle to enforce the connection between different objects
in our plots.

</div>
<div class="column" style="flex:50%;">

<svg height="250" width="500">
<rect x="100" y="100" width="30" height="100" style="fill:steelblue" /> 
<rect x="150" y="120" width="30" height="80" style="fill:steelblue" /> 
<rect x="200" y="80" width="30" height="120" style="fill:steelblue" /> 
<rect x="250" y="70" width="30" height="130" style="fill:steelblue" /> 
<rect x="300" y="110" width="30" height="90" style="fill:steelblue" /> 
<rect x="350" y="110" width="30" height="90" style="fill:steelblue" /> 
<line x1="80" y1="200" x2="400" y2="200" stroke="gray" style="stroke-width:3;" />

<path d="M 290 220 L 390 220 L 390 50 L 290 50 z" stroke="grey" style="fill:none; stroke-width:1;" />

<text x="300" y="70" fill="gray"> Relevant </text>
<text x="300" y="90" fill="gray"> Items </text>
</svg>

</div>
</div>
<p><br /></p>

<h2 id="closure-and-continuity">Closure and continuity</h2>

<div class="emphbox">
We see complete figures even if part of the
information is missing.
</div>

<svg id="triangle" height="400" width="400">
<circle cx="150" cy="165" r="40" style="fill:steelblue" />
<circle cx="200" cy="250" r="40" style="fill:steelblue" />
<circle cx="100" cy="250" r="40" style="fill:steelblue" />
<polygon points="150 165, 200 250, 100 250" style="fill:#fffcfa" />
</svg>

<p>In the above figure we see a triangle, even if
there are pieces of its perimeter which
are missing.</p>

<p>The same principle also applies to lines,
but in this case it is often called continuity
principle.</p>

<div id="continuity">
</div>

<script src="/docs/assets/javascript/gestalt/continuity.js">
</script>

<p>In this figure this principle is applied twice: we both perceive many small circles even if the lines are dashed,
and we perceive one big circle even if there is no circle drawn.</p>

<p>Some author consider the following corollary of the above principle as an independent principle:</p>

<div class="emphbox">
When two or more objects are intersecting we perceive each of them 
as uninterrupted.
</div>

<svg height="300" width="400">
<g transform="rotate(45 110 200)">
<rect x="100" y="100" height="200" width="20" style="fill:crimson" />
</g>

<g transform="rotate(-45 110 200)">
<rect x="100" y="100" height="200" width="20" style="fill:steelblue" />
</g>
</svg>

<p><br /></p>

<p>We perceive the above objects as a blue bar and a red bar,
despite the fact that what we actually see are a blue bar and two
red bars.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />

This fact has, as immediate consequence, that we tend to draw conclusions 
by using this principle even if we do not see the data...

</div>
<div class="column" style="flex:50%;">
<svg height="300" width="350">

<circle cx="60" cy="165" r="10" style="fill:crimson" />
<circle cx="80" cy="165" r="10" style="fill:crimson" />
<circle cx="100" cy="165" r="10" style="fill:crimson" />

<circle cx="160" cy="165" r="10" style="fill:crimson" />
<circle cx="180" cy="165" r="10" style="fill:crimson" />

<circle cx="100" cy="185" r="10" style="fill:steelblue" />
<circle cx="115" cy="165" r="10" style="fill:steelblue" />
<circle cx="130" cy="151" r="10" style="fill:steelblue" />
<circle cx="145" cy="110" r="10" style="fill:steelblue" />
<circle cx="160" cy="105" r="10" style="fill:steelblue" />


<circle cx="115" cy="185" r="10" style="fill:steelblue" />
<circle cx="130" cy="161" r="10" style="fill:steelblue" />
<circle cx="145" cy="130" r="10" style="fill:steelblue" />
<circle cx="160" cy="125" r="10" style="fill:steelblue" />

<circle cx="115" cy="205" r="12" style="fill:steelblue" />
<circle cx="130" cy="181" r="12" style="fill:steelblue" />
<circle cx="145" cy="150" r="12" style="fill:steelblue" />
<circle cx="160" cy="145" r="12" style="fill:steelblue" />

<circle cx="145" cy="165" r="10" style="fill:steelblue" />

</svg>

</div>
</div>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />

...but these conclusions may be wrong
</div>
<div class="column" style="flex:50%;">
<svg height="300" width="350">

<circle cx="60" cy="165" r="10" style="fill:crimson" />
<circle cx="80" cy="165" r="10" style="fill:crimson" />
<circle cx="100" cy="165" r="10" style="fill:crimson" />
<circle cx="160" cy="165" r="10" style="fill:crimson" />
<circle cx="180" cy="165" r="10" style="fill:crimson" />

</svg>

</div>
</div>

<h2 id="figure-ground">Figure-ground</h2>

<div class="emphbox">
When we look at objects in one image, we wither instinctively identify them
as foreground or as background.
</div>

<p><img src="/docs/assets/images/gestalt/Cup_or_faces_paradox.svg" alt="" /></p>

<p><br /></p>

<p>The Rubin vase is a common example of this principle,
where one either identifies two faces or a vase, and switching between
one idea and the other is rather difficult.</p>

<p>This fact is related to the following principle</p>

<h2 id="multistability">Multistability</h2>

<div class="emphbox">
When an image has more than one interpretation, we cannot
see more than one simultaneously.
</div>

<p>Switching between different interpretations is called multistability.</p>

<h2 id="invariance">Invariance</h2>

<div class="emphbox">
We are able to recognize objects even if they are deformed or rotated.
</div>

<p><img src="/docs/assets/images/gestalt/captcha.svg" alt="" /></p>

<p>This principle is the one leveraged by captchas, and it’s what makes the human brain
the best pattern recognition machine on Earth, at least for the moment.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
In fact, thanks to the invariance principle, we can easily identify 
patterns which are only approximately realized, while this is a rather hard task
to implement in a general form in an algorithm.
</div>

<div class="column" style="flex:50%;">

<svg height="350" width="350">

<circle cx="100" cy="185" r="10" style="fill:steelblue" />
<circle cx="150" cy="165" r="10" style="fill:steelblue" />
<circle cx="200" cy="151" r="10" style="fill:steelblue" />
<circle cx="250" cy="110" r="10" style="fill:steelblue" />
<circle cx="300" cy="105" r="10" style="fill:steelblue" />

<path d="M 20 50 L 20 300 L 350 300" stroke="gray" style="fill:none; stroke-width:3;" />

</svg>

</div>
</div>

<h2 id="symmetry">Symmetry</h2>

<div class="emphbox">
When there is a lack of symmetry, our attention is attracted by it.
</div>

<svg height="400" width="700">
<rect x="100" y="100" width="80" height="80" style="fill:crimson" /> 
<rect x="200" y="100" width="80" height="80" style="fill:crimson" /> 
<rect x="300" y="100" width="80" height="80" style="fill:crimson" /> 
<rect x="400" y="100" width="80" height="80" style="fill:crimson" /> 
<rect x="500" y="100" width="80" height="80" style="fill:green" /> 
</svg>

<p>In the previous image, your eye will probably fall
on the green square, as it looks different from
the other squares.</p>

<div class="row" style="display:flex">
<div class="column" style="flex:50%;">
<br />
<br />
<br />
<br />
By using this principle we can draw the attention of the reader on 
some specific objects in our visualization.

</div>
<div class="column" style="flex:50%;">

<svg height="250" width="500">
<rect x="100" y="100" width="30" height="100" style="fill:lightgrey" /> 
<rect x="150" y="120" width="30" height="80" style="fill:lightgrey" /> 
<rect x="200" y="80" width="30" height="120" style="fill:lightgrey" /> 
<rect x="250" y="70" width="30" height="130" style="fill:steelblue" /> 
<rect x="300" y="110" width="30" height="90" style="fill:lightgrey" /> 
<rect x="350" y="110" width="30" height="90" style="fill:lightgrey" /> 
<line x1="80" y1="200" x2="400" y2="200" stroke="gray" style="stroke-width:3;" />

</svg>

</div>
</div>

<p>Of course you can do the same by breaking
<!--
<span style="font-family:Courier New"> 
any symmetry.
</span>
-->
<strong><em>any symmetry</em></strong>.</p>

<h2 id="simplicity">Simplicity</h2>

<div class="emphbox">
We favor simple interpretations to complex ones, and we prefer symmetry and
balance to disorder.
</div>

<svg height="500" width="800">
<circle cx="300" cy="130" r="30" stroke="black" style="fill:none;stroke-width:3;" />
<circle cx="500" cy="130" r="30" stroke="black" style="fill:none;stroke-width:3;" />
<circle cx="400" cy="200" r="200" stroke="black" style="fill:none;stroke-width:3;" />
<line x1="300" x2="500" y1="300" y2="300" stroke="black" style="stroke-width:3;" />
</svg>

<p>In the above picture we naturally see a face rather than a series of circles and
lines.</p>

<h2 id="common-fate">Common fate</h2>

<div class="emphbox">
Objects that point to (or appear to be moving in) the same direction at the same
speed are perceived as a group.
</div>

<div id="fate">
</div>

<script src="/docs/assets/javascript/gestalt/fate.js">
</script>

<p>In the above example, one can clearly distinguish a group
as the circles moving together around a same point.</p>

<p>Notice that we don’t need them to actually move.</p>

<p>This principle does not belongs to the original Gestalt principles, but it is 
sometimes used in web interfaces, and it finds applications in dashboard design too, so 
I decided to include it here for the sake of completeness.</p>

<h2 id="conclusions">Conclusions</h2>

<p>The Gestalt psychology is a powerful tool when designing a visualization,
as we can leverage it to convey a sense of grouping among items.</p>

<h2 id="suggested-readings">Suggested readings</h2>

<ul>
  <li><cite> Gordon, I.E. (2004). Theories of Visual Perception (1st ed.). Psychology Press. https://doi.org/10.4324/9780203502259 </cite></li>
  <li><cite> Stephen Few. 2006. Information Dashboard Design: The Effective Visual Communication of Data. O’Reilly Media, Inc. </cite></li>
</ul>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/gestalt/" /><summary type="html"><![CDATA[How does our brain build patterns]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/gestalt/gestalt.svg" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/gestalt/gestalt.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Channel effectiveness</title><link href="http://localhost:4000/effectiveness/" rel="alternate" type="text/html" title="Channel effectiveness" /><published>2023-11-05T00:00:00+01:00</published><updated>2023-11-05T00:00:00+01:00</updated><id>http://localhost:4000/effectiveness</id><content type="html" xml:base="http://localhost:4000/effectiveness/"><![CDATA[<p>When we have been talking about <a href="/marks-channels">marks and channels</a>
we mentioned the concept of effectiveness, by saying it
reflects how easily we translate the visual information encoded into the
corresponding channel.</p>

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v5.js"></script>

<p>Effectiveness is not a fundamental quantity, but it rather summarizes a
number of possible features:</p>
<ul>
  <li>Accuracy</li>
  <li>Discriminability</li>
  <li>Salience</li>
  <li>Separability</li>
  <li>Grouping</li>
</ul>

<p>In this post we will discuss the meaning of these terms, and we will 
see how to determine which channel is the most effective for your task.</p>

<h2 id="accuracy">Accuracy</h2>
<p>Accuracy quantifies how good is a channel in conveying the value of an attribute.
Not all channels are equally accurate, as we perceive different
channels in different ways.
Research showed that, on average, there is a power law relationship between the 
change in the stimulus and the perceived change, and this law goes under the name
of <strong>Stevens’ power law</strong></p>

\[\psi_k(I) \propto I^{a_k}\]

<p>where $a_k$ is the exponent associated with the stimulus of type $k$,
$I$ is the intensity of the stimulus and $\psi$ represents the perceived
value.
Here we show the relation for some of the main channels we will use.</p>

<div id="stevens"> </div>
<script src="/docs/assets/javascript/effectiveness/stevens.js"> </script>

<p>As we see, the only quantity which we perceive linearly is the length,
while we are on average worst at estimating any other quantity.</p>

<p>As an example, try and estimate the length ratio between the two
lines and the area ratio between the two circles:</p>

<p><br />
<br /></p>

<svg height="150" width="600">
  <line x1="0" y1="40" x2="150" y2="40" style="stroke:crimson;stroke-width:10" />
  <line x1="0" y1="60" x2="450" y2="60" style="stroke:steelblue;stroke-width:10" />
</svg>

<svg height="150" width="500">
  <circle cx="150" cy="50" r="28.87" fill="crimson" />
  <circle cx="250" cy="50" r="50" fill="steelblue" />
</svg>

<p>Both the ratios are equal to 3. Was it hard to do that? How accurate
have you been?</p>

<h2 id="discriminability">Discriminability</h2>

<p>Discriminability quantifies how many different values can we encode into
a certain channel by letting them being perceived differently.
Of course, this only becomes a problem as you approach the discriminability
limit of the channel.</p>

<p>Here we show 30 different tones of
red. Can we distinguish all of them? Honestly I think it’s quite a hard task.</p>

<div id="discriminability"> </div>
<script src="/docs/assets/javascript/effectiveness/discriminability.js"> </script>

<h2 id="salience">Salience</h2>

<p>Salience tells us how easy it is for us to find differences among objects
by using a certain channel.
As we have previously seen, it’s very easy to spot a red circle between
blue circles, so color hue has good salience capabilities.
Color luminance is much worst in this task, as it is very hard to spot
objects with different color luminance, so color luminance has 
worst salience (or worst popout properties) than color hue.</p>

<h2 id="separability">Separability</h2>

<p>Channels cannot be treated independently one on the others,
but the properties of one channels depend on the other channels
used in the visualization.
There are channels among this interaction is stronger, and those
channels are called <strong>integral</strong>, as well as channels where the interaction
is almost negligible, and they are called <strong>separable</strong>.</p>

<svg height="150" width="500">
  <circle cy="50" cx="50" r="1.5" fill="crimson" />
  <circle cy="50" cx="100" r="3" fill="crimson" />
  <circle cy="50" cx="150" r="6" fill="crimson" />
  <circle cy="50" cx="200" r="12" fill="crimson" />
  <circle cy="50" cx="250" r="24" fill="crimson" />
</svg>

<p>In the above figure, do you always perceive the same color? Or do
you rather think that the color of the ball changes with the circle?
Most of the people would say that the color changes among the circles,
and they would be wrong.
This is because color interacts with size, especially for small objects.</p>

<p>The interaction also goes the other way round:</p>

<p><br /></p>
<div style="background-color:black;">
<span style="color:red;font-size:60px;">
Most people perceive this as bigger</span>
<br />
<span style="color:blue;font-size:60px;">But the two
lines have the same size</span>
</div>

<p><br />
In the first case the color was affected by the size,
in the second case the other way round happened.</p>

<h2 id="grouping">Grouping</h2>

<p>Grouping tells us how easy it is for us to spot patterns in the data.
In psychology it has been extensively studied what we perceive as grouped,
and these results are collected into the <strong>Gestalt principles</strong>.</p>

<p>Gestalt principles are well known to whoever studied design, and we will
discuss them into a <a href="/gestalt">separate post</a>.</p>

<h2 id="our-perception-depends-on-the-context">Our perception depends on the context</h2>
<p>What we perceive strongly depends
on the context.
As an example, the color perception of an object depends on the color of the
surrounding objects.</p>

<p><br />
<br /></p>

<svg height="400" width="1100">
<rect x="0" y="0" height="400" width="550" fill="#e7d645" />
<rect x="550" y="0" height="400" width="550" fill="#8d9488" />
<rect x="50" y="195" height="10" width="1000" fill="#b6af59" />
</svg>

<p><br />
<br /></p>

<p>Would you always name the color of the above stripe in the same way?</p>

<h2 id="conclusions">Conclusions</h2>

<p>We have seen different criteria to assess
the effectiveness of a channel.
Depending on your task, you should find
the most appropriate way to assess the effectiveness
of a visualization.
If you want to precisely compare values, you
should probably favour more accurate channels,
while if you want to check if your
clustering algorithm is doing its job, then you should consider using channels where grouping is easier.</p>

<h2 id="suggested-readings">Suggested readings</h2>

<ul>
  <li><cite> Munzner, T. (2015). Visualization Analysis and Design. CRC Press. ISBN: 9781498759717 </cite></li>
  <li><cite> Colin Ware, Information Visualization, Perception for Design. </cite></li>
  <li><cite>Edward R. Tufte. 1986. The visual display of quantitative information. Graphics Press, USA.</cite></li>
</ul>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/effectiveness/" /><summary type="html"><![CDATA[Quantifying the goodness of a channel to show an information]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/effectiveness/effectiveness.png" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/effectiveness/effectiveness.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Evolutions of the line chart</title><link href="http://localhost:4000/linechart-evolution/" rel="alternate" type="text/html" title="Evolutions of the line chart" /><published>2023-11-03T00:00:00+01:00</published><updated>2023-11-03T00:00:00+01:00</updated><id>http://localhost:4000/linechart-evolution</id><content type="html" xml:base="http://localhost:4000/linechart-evolution/"><![CDATA[<p>In a <a href="/fundamental-charts">previous post</a> we saw some of the most fundamental charts,
which are the basic building blocks for data visualization.</p>

<p>Datasets can become very complex, and you should adapt your data visualization
depending on your needs.
Here we will take a look at how we can draw more and more complex datasets
by simply changing few details of the basic visualization, and we will
do so by using the line chart as fundamental visualization.</p>

<h2 id="the-line-chart">The line chart</h2>

<p>As we have already seen, in the line chart we have</p>
<ul>
  <li>an ordered key attribute on the $x$ axis</li>
  <li>a quantitative value attribute on the $y$ axis</li>
</ul>

<p>As an example, let us take a look at evolution over the years the Italian GDP per capita expressed in US dollars adjusted by the US inflation, which can be found
<a href="https://github.com/thestippe/thestippe.github.io/blob/main/data/gdp_per_capita_filtered.csv">on the github repo of the blog</a>.</p>

<p>The dataset is based on <a href="https://github.com/RaafatSaleh/GDP-per-capita-and-its-effect-on-the-man-life-quality/blob/master/Data/gdppercapita_us_inflation_adjusted.csv">Raafat Saleh’s repo</a>.</p>

<div id="linechart"> </div>
<script src="/docs/assets/javascript/linechart_evolution/linechart.js"> </script>

<p>This visualization allow us to see how a quantity (the GDP per capita)
changes over time, and it does that in a decent way.</p>

<h2 id="issues-with-the-line-chart">Issues with the line chart</h2>

<p>But what does it happen when we add a second categorical key attribute?
As an example, let’s try and visualize more than one Country in
a single plot.
Let us start by using color to encode the Country</p>

<div id="multiple_linechart"> </div>
<script src="/docs/assets/javascript/linechart_evolution/multiple_linechart.js"> </script>

<p>As the number of lines grows, the graph soon becomes more and more cluttered.
Already with a small number of lines it becomes difficult to catch the behavior
of a single line.</p>

<p>We have two main alternatives to the multiple line chart:</p>
<ul>
  <li>we can put one line chart per graph and we create a <strong>small multiples</strong></li>
  <li>we can use another channel to encode the value attribute
or, of course, we can combine the two techniques.</li>
</ul>

<h2 id="small-multiples">Small multiples</h2>

<p>Broadly speaking, when you build a small multiple you draw more than
one visualization, and each visualization is indexed by a label which is not
used in any of the single images.
This technique is also called faceting.</p>

<div id="sm_linechart"> </div>
<script src="/docs/assets/javascript/linechart_evolution/sm_linechart.js"> </script>

<p>Here we used small multiples to put one visualization on the right of the previous,
but you can also order them vertically or build a grid.</p>

<p>The main advantage of the small multiples is that they reduce clutter,
but it becomes more difficult to compare the single lines.</p>

<h2 id="stacked-area-chart">Stacked area chart</h2>

<p>If the value attribute is sequential as in our case (the GDP cannot become negative), another possible solution is to stack the lines one above the other one,
and this is done in the stacked area chart.</p>

<div id="stacked_chart"> </div>
<script src="/docs/assets/javascript/linechart_evolution/stacked_chart.js"> </script>

<p>The major issue with this solution is that, for all but the lowest curve,
the baseline is not constant, and this makes difficult to quantify the values.</p>

<h2 id="streamgraph">Streamgraph</h2>

<p>A stacked bar chart can become cumbersome when one has many channels, and in this
case one may use a streamgraph.</p>

<div id="steamgraph"> </div>
<script src="/docs/assets/javascript/linechart_evolution/steamgraph.js"> </script>

<p>The streamgraph is obtained by allowing the lower
line to vary, and either by making it symmetric with respect to the $x$ axis or by choosing it exact shape by minimizing some target quantity.
This method allows you to show
a large number of categories, but the main drawback
is that one needs some practice to read it.</p>

<h2 id="conclusions">Conclusions</h2>

<p>We have seen few possible evolutions of the line chart.
Those alternatives are appropriate when you want to plot the evolution of a quantitative variable
for a set of categories.
Faceting can be combined with anyone of the visualizations we have previous discussed, while stacking can 
only be applied to bar chart or line chart.
Finally, we have seen the streamgraph,
which uses an alternative way of stacking the lines.</p>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/linechart-evolution/" /><summary type="html"><![CDATA[When a linechart is not enough]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/linechart_evolutions/areaplot.png" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/linechart_evolutions/areaplot.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Beyond the 1D scatterplot</title><link href="http://localhost:4000/scatterplot-evolution/" rel="alternate" type="text/html" title="Beyond the 1D scatterplot" /><published>2023-11-02T00:00:00+01:00</published><updated>2023-11-02T00:00:00+01:00</updated><id>http://localhost:4000/scatterplot-evolution</id><content type="html" xml:base="http://localhost:4000/scatterplot-evolution/"><![CDATA[<p>When we discussed <a href="/fundamental-charts">the fundamental charts</a>, we saw the most basic way to visualize one dimensional
quantitative data.
In this post we will discuss alternatives ways to perform this task.</p>

<script src="https://d3js.org/d3.v5.js"></script>

<h2 id="1-d-scatterplot">1-D Scatterplot</h2>

<p>As we already discussed, the one dimensional scatterplot is the easiest
way to visualize one dimensional quantitative data.</p>

<div id="my_scatterplot1d"> </div>

<script src="/docs//assets/javascript/fundamental_charts/scatterplot1d.js"> </script>

<p>This visualization can however become very crowded as the number of points grows,
and in this case it is hard to count the number of points within a certain range
of values.
This is known as the <strong>curse of dimensionality</strong>,
and it’s one of the most central problems
in dataviz.</p>

<p>In order to allow for a larger number
of points, you can jitter your points,
namely put them randomly on your
y axis. This operation may
however confuse your audience
if they are not used to it.</p>

<h2 id="histogram">Histogram</h2>

<p>Histograms are very common ways to show how a certain quantity is distributed.
In a first step, a range of values is divided in
$n$ equally spaced intervals.
We then visualize the number of objects belonging to
each interval.</p>

<script src="/docs/assets/javascript/beyond_scatterplot/histogram.js"> </script>

<div id="hist"> 
</div>

<p>While this visualization scales much better than
the scatterplot, it has as main drawback the fact
that the results (and so the conclusions) depend
on the choice of the interval, and the discretization
may hide some important feature of the data.</p>

<h2 id="boxplot">Boxplot</h2>

<p>Boxplot is another popular way to show one dimensional
distributions.
In this visualization, rather than showing the data,
we show the main features of the underlying 
distribution.</p>

<div id="boxplotdiv"></div>
<script src="/docs/assets/javascript/beyond_scatterplot/boxplot.js"></script>

<p>In order to understand this visualization, your audience
should be trained, so it’s not suited for general audience.
There is no agreement on the exact values one should visualize.
As an example, we used the 10th, 25th, 50th, 75th and 90th percentile
for the five values shown (the leftmost point, the left border of the
box, the central value, the right border of the box and the rightmost point respectively).
Moreover, this visualization is only meaningful for unimodal data,
so you should always make sure that these condition hold.</p>

<h2 id="kernel-density-estimate">Kernel Density Estimate</h2>

<p>Kernel Density Estimates, KDE for brevity,
are a set of methods to estimate the probability
distribution function of a set of data.</p>

<div id="kde1d"> 
</div>

<script src="/docs/assets/javascript/beyond_scatterplot/kde.js"> </script>

<p>The result strongly depends on the kernel choice
as well as on its free parameters,
which are both subjective choices.
Before using this method you should make sure
that your kernel is appropriate for your data.
Due to the strong dependence of the result on
the kernel choice, many authors both show
 the KDE plot and the scatterplot.</p>

<p>In case you want to know more about KDE,
there are many resources online, as they have been
very popular in the Machine Learning community.
You can take a look at the <a href="https://en.wikipedia.org/wiki/Kernel_density_estimation">Wikipedia page</a> 
or at the <a href="https://scikit-learn.org/stable/modules/density.html">scikit-learn documentation</a>.</p>

<h2 id="conclusions">Conclusions</h2>

<p>We have seen few methods to visualize the distribution
of a single quantitative variable.
If your dataset is small, then the best way to
show your data is simply to show them on a scatterplot,
as this is the most transparent way to visualize
a single quantitative variable.</p>

<p>If your dataset is large, however, choosing how to visualize
your data is a trade off between transparency
and readability, and there is no single answer to the
question of how to choose the most appropriate visualization.</p>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/beyond-scatterplot/" /><summary type="html"><![CDATA[How to visualize one dimensional distributions]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/beyond_scatterplot/boxplot.svg" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/beyond_scatterplot/boxplot.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Perception</title><link href="http://localhost:4000/perception/" rel="alternate" type="text/html" title="Perception" /><published>2023-11-01T00:00:00+01:00</published><updated>2023-11-01T00:00:00+01:00</updated><id>http://localhost:4000/perception</id><content type="html" xml:base="http://localhost:4000/perception/"><![CDATA[<p>Before digging into visualizations, we must understand how do we perceive
images.
We will first give an overview about how eye perceives
light, we will then take a look at the role
of attention in vision.</p>

<h2 id="the-human-eye">The human eye</h2>

<p>Typically the human eye can detect light in the range of wavelengths going
from 380 nanometers (violet) to 700 nanometers (red).
Our eye is rather complex, but to our aim we can only consider few components:</p>
<ul>
  <li>The <strong>cornea</strong> which acts as a convergent lens and focuses the light coming to our eye.</li>
  <li>The <strong>iris</strong> which regulates the amount of light entering into our eye.</li>
  <li>The <strong>crystalline lens</strong> changes the focal length of the eye, allowing us to focus on different objects.</li>
  <li>The <strong>retina</strong> which contains the light receptors of our eye.</li>
  <li>The <strong>optic nerve</strong> which transmits the information from the retina to the brain.
<br />
<br />
<img src="/docs/assets/images/perception/Three_Main_Layers_of_the_Eye.png" height="550px" /></li>
</ul>
<figcaption>The structure of the eye.
Image taken from <a href="https://en.m.wikipedia.org/wiki/File:Three_Main_Layers_of_the_Eye.png">Wikipedia</a> under Creative Common license.</figcaption>
<p><br />
<br />
The light receptors are located on the retina, and they convert the light into electric signals.
These electric signals are then sent to the brain through the optic nerve.
In order to accommodate the optic nerve, there is a hole into our retina, and this implies that we have a blind spot into our sight.
If you want to experiment it yourself, you can close your right eye and look at the right circle, making sure that the two circles are
aligned and that the line is in front of your nose. Move your head closer and farther away from the screen, at some point you should see the left circle disappearing.
The exact distance depends on the dimension of your screen, but on a PC screen this should happen roughly at a distance equal to your
arm’s length.
<br />
<br /></p>

<svg width="1200" height="200" style="background-color:lightgray">
<circle cx="150" cy="100" r="50" style="fill:black" />
<line x1="600" y1="0" x2="600" y2="250" stroke="black" stroke-width="4" />
<circle cx="1050" cy="100" r="50" style="fill:black" />
</svg>

<p><br />
<br />
If you tried the experiment, you will notice that you simply don’s see the black circle, but you perceive
 that you see the background color.
This happens because our brain keeps reconstructing the unavailable information with the available information.</p>

<p>Into the retina we have three kind of receptors:</p>
<ul>
  <li>The <strong>rod cells</strong> which are very sensitive in low light conditions. They are roughly 90 millions and are especially used into the peripheral vision and night vision. They are especially concentrated at the outer edge of our retina</li>
  <li>The <strong>cone cells</strong> are responsible of the color vision, and are roughly 6 millions. Human eye has three kind of cone cells, and each type is more sensitive into a specific wavelengths range, corresponding approximately to <strong>red</strong>, <strong>blue</strong> and <strong>green</strong> wavelengths and named long, medium and short wavelengths cones.</li>
  <li>The <strong>retinal ganglion cells</strong>, which are devoted to long term representation of ambient light, and are very important for many tasks such as the pupil control, the melatonin production and in the synchronization of the circadian rhythm.</li>
</ul>

<p>The red cones are approximately ten times the green or blue ones, this is why we are better in discriminating the red tones than the blue or green ones.</p>

<p><img src="/docs/assets/images/perception/Cone-absorbance-en.svg" alt="Cone absorbance" /> The typical spectrum of our light receptors, from <a href="https://en.wikipedia.org/wiki/Rod_cell">Wikipedia</a> (CC license).</p>

<p>The cone density is much higher in a small region located oppositely to the iris,
namely the <strong>fovea</strong>. Approximately half the nerve fibers in the optic nerve
carry information from the fovea, while the remaining half carry information
from the rest of the retina.</p>

<p>This should suggest you that the fovea is the region with the highest resolution
of the retina, and since it is very small our eye can only clearly see within
a very small region.
In fact, our high-resolution region is limited to less than 2 degrees.
If you want to visualize this angle, you can use the <strong>thumb’s rule</strong>: 
extend your arm in front of you and look at your thumb, its width has a visual angle of approximately 2 degrees.</p>

<p>On the other hand, on average, we have the feeling that we can clearly see most
of what surrounds us. This is because our eye makes small movements (typically less than 20 degrees)
named <a href="https://en.wikipedia.org/wiki/Saccade"><strong>saccadic movements</strong></a> with an average time between two movements of 225 ms.
Our brain then elaborates the images and reconstructs a map by using many movements,
giving us the feeling of a higher resolution.</p>

<p>This has a very important impact on data visualization:</p>

<div class="emphbox">
Attention plays  a major role into what we perceive.
</div>

<!--
<div id="demoPerception"></div>

<button onclick="startTimer()">Start</button>

<script src="/docs/assets/javascript/perception/resolution.js"> </script>
-->

<h2 id="preattentive-features">Preattentive features</h2>

<p>For this reason the scientific community spent a lot of energy in trying and determine
what drives our attention.
According to Colin Ware’s textbooks 
<strong>Information Visualization: Perception for Design</strong> the list of features which
drives our attention, named <strong>preattentive features</strong>, can be divided into
four kind of features: <strong>form, color, motion</strong> and <strong>spatial positioning</strong>.</p>

<p><strong>Form:</strong></p>
<ul>
  <li>Line orientation</li>
  <li>Line length</li>
  <li>Line width</li>
  <li>Line collinearity</li>
  <li>Size</li>
  <li>Curvature</li>
  <li>Spatial grouping</li>
  <li>Blur</li>
  <li>Added marks</li>
  <li>Numerosity</li>
</ul>

<p><strong>Color:</strong></p>
<ul>
  <li>Color hue</li>
  <li>Color intensity</li>
</ul>

<p><strong>Motion:</strong></p>
<ul>
  <li>Flicker</li>
  <li>Direction of motion</li>
</ul>

<p><strong>Spatial positioning:</strong></p>
<ul>
  <li>2D position</li>
  <li>Stereoscopic depth</li>
  <li>Convex/concave shape from shading</li>
</ul>

<div class="emphbox">
Whenever you want to encode a relevant information in your visualization,
you should use one of the above features.
</div>

<p>Not all of them take the same amount of time to be processed.
As an example, it takes a very short time to recognize a red circle
between many blue circles.
If you don’t trust me you can try and click on the red circle in the figure below.
Each time you will hit it a new figure will appear, and you will get visualize
the distribution of the time needed to hit it.</p>

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v5.js"></script>

<div id="preattentive_color"> </div>

<!-- Create a div where the graph will take place -->

<p>I am quite sure it was quite an easy task,
as most of us can clearly see the red circle
immediately.
For this reason we say that the red circle
pops out.
You can now try and perform the same task, but this time you will be required
and hit the blue square.</p>

<div id="preattentive_size"> </div>

<p>I am quite sure it was quite easy, but not
as easy as the exercise before.
Now try and compare your time distributions.
Is the first one typically smaller than the second one?
Do the two distributions overlap?
Here you can find the kernel density estimate for my results,
which I collected for few days, trying the exercises in different moments
and in different order.</p>

<p><img src="/docs/assets/images/perception/hist.png" alt="" /></p>

<p>The heavy tails likely correspond to some missed click, so it took some time
to click a second time.
The two distributions are similar but definitely not identical,
the one corresponding to the shape is shifted on the right with respect to
the one corresponding to the color.</p>

<p>Of course this cannot be considered an experiment, I am just trying and give you
some evidence that finding a blue square between many blue circles takes
some more time than finding a red circle between many blue circles.</p>

<h2 id="conclusions">Conclusions</h2>

<p>We had a broad overview about how do we perceive what surrounds us, and we have
seen that there is a class of visual features, namely the preattentive
features, which govern our attention.
We can leverage them to draw the attention of our audience where we think
it’s most relevant</p>

<p>Unfortunately, as we will see, properly using the preattentive features is far from being easy, especially when
you want to combine more than one feature.
Some feature combinations are still preattentive, while other are
no more preattentive, and at the best of my knowledge there are no
exhaustive studies where these combinations are analyzed.</p>

<p>For this post we will limit our discussion about one feature at time, but
we will discuss how we can combine more than one feature to obtain different
effects.</p>

<h2 id="bonus-the-results-of-your-tests">Bonus: the results of your tests</h2>

<p>In the following are listed the results of both of your test.</p>

<div id="combined_chart"> </div>

<h3 id="color-difference">Color difference</h3>

<div id="preattentive_color_list"> </div>

<h3 id="size-difference">Size difference</h3>

<div id="preattentive_size_list"> </div>

<script src="/docs//assets/javascript/perception/preattentive_color.js"> </script>

<script src="/docs//assets/javascript/perception/preattentive_size.js"> </script>

<script src="/docs/assets/javascript/perception/combined_chart.js"> </script>

<h2 id="suggested-readings">Suggested readings</h2>

<ul>
  <li><cite> Colin Ware, Information Visualization, Perception for Design. </cite></li>
</ul>]]></content><author><name>Data-perspectives</name><email>dataperspectivesblog@gmail.com</email></author><category term="/dataviz/" /><category term="/perception/" /><summary type="html"><![CDATA[How do we see what surrounds us]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/docs/assets/images/perception/eye.jpg" /><media:content medium="image" url="http://localhost:4000/docs/assets/images/perception/eye.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>